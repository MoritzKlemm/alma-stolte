webpackHotUpdate("alma-stolte",{

/***/ "./packages/alma-stolte-theme/src/components/Contact.js":
/*!**************************************************************!*\
  !*** ./packages/alma-stolte-theme/src/components/Contact.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ContactUs; });\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.regexp.constructor.js */ \"./node_modules/core-js/modules/es.regexp.constructor.js\");\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"./node_modules/core-js/modules/es.regexp.to-string.js\");\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/esm/index.js\");\n/* harmony import */ var react_bootstrap_Container__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-bootstrap/Container */ \"./node_modules/react-bootstrap/esm/Container.js\");\n/* harmony import */ var react_bootstrap_Row__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-bootstrap/Row */ \"./node_modules/react-bootstrap/esm/Row.js\");\n/* harmony import */ var react_bootstrap_Col__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-bootstrap/Col */ \"./node_modules/react-bootstrap/esm/Col.js\");\n/* harmony import */ var emailjs_com__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! emailjs-com */ \"./node_modules/emailjs-com/source/index.js\");\n/* harmony import */ var emailjs_com__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(emailjs_com__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _ContactAlert__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ContactAlert */ \"./packages/alma-stolte-theme/src/components/ContactAlert.js\");\n/* harmony import */ var react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react-bootstrap/Alert */ \"./node_modules/react-bootstrap/esm/Alert.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nlet _=t=>t,_t;function _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}function ContactUs(){// variable to save if alert is shown. three options: hide, success, failure\nconst[alertStatus,setAlertStatus]=Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])('hide');const[email,setEmail]=Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])('');const[emailCorrect,setEmailCorrect]=Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])('form-control');const validate=userInput=>{// to keep input field synchron with user input\nsetEmail(userInput);// define email pattern\nconst regExMail=/\\S+@\\S+\\.\\S+/;// create regex object \nconst regExMailObject=new RegExp(regExMail);// test against use input saved in \"email\"\nlet result=regExMailObject.test(email.toLowerCase());setEmailCorrect(userInput==''?'':result?\"form-control is-valid\":\"form-control is-invalid\");return result;};function sendEmail(e){e.preventDefault();// credentials derived from emailjs.com\nemailjs_com__WEBPACK_IMPORTED_MODULE_10___default.a.sendForm('service_cmv2a0i','template_icmanhg',e.target,'user_qyKXt1Dj8Hq0dM0sJ1q8r').then(result=>{console.log(result.text);if(result.text==\"OK\"){setAlertStatus('success');}},error=>{console.log(error.text);setAlertStatus('failure');});setTimeout(e.target.reset(),2000);}return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsxs\"])(StyledContainer,{id:\"contact-smooth-scroll\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsxs\"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"Form\"],{className:\"contact-form\",onSubmit:sendEmail,children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"Form\"].Group,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(StyledInput,{type:\"text\",name:\"user_name\",placeholder:\"Vor -und Nachname\",className:\"form-control\"})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"Form\"].Group,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(StyledInput,{type:\"email\",name:\"user_email\",placeholder:\"Email\",value:email,onChange:e=>{validate(e.target.value);},className:emailCorrect})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"Form\"].Group,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(StyledInput,{type:\"text\",name:\"subject\",placeholder:\"Betreff\"})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"Form\"].Group,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(StyledFormControlMessage,{as:\"textarea\",rows:8,name:\"message\",placeholder:\"Nachricht an Alma Stolte...\"})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"Form\"].Group,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(StyledFormButton,{type:\"submit\",value:\"Send\",children:\"senden\"})})]}),alertStatus=='hide'?null:alertStatus=='success'?Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(StyledSuccessAlert,{variant:\"success\",onClick:()=>{setAlertStatus('hide');},dismissible:true,fade:true,show:true,children:\"Ihre Nachricht wurde verschickt!\"}):Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_13__[\"jsx\"])(StyledWarningAlert,{variant:\"warning\",onClick:()=>{setAlertStatus('hide');},dismissible:true,className:\"fade show\",children:\"Achtung! Ihre Nachricht wurde nicht verschickt.\"})]});}const StyledContainer=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_5__[\"styled\"])(react_bootstrap_Container__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{target:\"e1jwy1zu5\",label:\"StyledContainer\"})( false?undefined:{name:\"1wpx54c\",styles:\"max-width:450px;padding:0px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});// input styling --------------------------------------\n// bootstrap <input> component. with type = \"x\" saying what type \nconst StyledInput=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_5__[\"styled\"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"Form\"].Control,{target:\"e1jwy1zu4\",label:\"StyledInput\"})( false?undefined:{name:\"1pgtf25\",styles:\"font-family:LibreBaskerville-Regular;font-size:15.2px;color:#595555;letter-spacing:1.0px;text-align:justify;background-color:transparent;border:none;border-bottom:1px solid grey;border-radius:0px;padding:2px 10px;margin:20px 0px;&:focus{background-color:transparent;}&::hover{curser:pointer;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const StyledFormControlMessage=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_5__[\"styled\"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_6__[\"Form\"].Control,{target:\"e1jwy1zu3\",label:\"StyledFormControlMessage\"})( false?undefined:{name:\"hifqds\",styles:\"font-family:LibreBaskerville-Regular;font-size:15.2px;color:#595555;letter-spacing:1.0px;text-align:justify;background-color:transparent;border:1px solid grey;border-radius:0px;height:200px;padding:4px 10px;margin-top:50px;&:focus{background-color:transparent;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const buttonHover=Object(frontity__WEBPACK_IMPORTED_MODULE_5__[\"keyframes\"])(_t||(_t=_`\n    from {transform: background-color: red;}\n    to {transform: background-color: blue;}\n`));const StyledFormButton=Object(frontity__WEBPACK_IMPORTED_MODULE_5__[\"styled\"])(\"button\",{target:\"e1jwy1zu2\",label:\"StyledFormButton\"})( false?undefined:{name:\"1pcsr4o\",styles:\"font-family:LibreBaskerville-Regular;font-size:15.2px;color:#595555;letter-spacing:1.0px;width:100%;height:35px;background-color:#6F9353;color:white;border:none;border-radius:0px;&:hover{background-color:#5F8046;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const StyledSuccessAlert=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_5__[\"styled\"])(react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{target:\"e1jwy1zu1\",label:\"StyledSuccessAlert\"})( false?undefined:{name:\"19jywi1\",styles:\"background-color:transparent!important;border:1px solid #6F9353;color:#6F9353\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const StyledWarningAlert=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_5__[\"styled\"])(react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{target:\"e1jwy1zu0\",label:\"StyledWarningAlert\"})( false?undefined:{name:\"zdnu7z\",styles:\"background-color:transparent!important;border:1px solid #BF4E30;color:#BF4E30\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/alma-stolte-theme/src/components/Contact.js\n");

/***/ })

})